lenlk8smastert01/10.238.0.13 == test server to practice the docker and kubernets.

docker pull nginx == it will pull latest images from docker hub.

docker images == to see downloaded images in server

docker rmi imagesname == to delte the image

docker create nginx:latest == to create the container 

docker ps -a == to see all containers which are in all states(running/exited)

docker start containerid == once created the container to bring to running state

docker ps == to see the containers only in running state.

docker rm containerid == to delete the container

docker images -a -q == it will display all images image id.

docker rmi 'docker images -a -q' == to remove all images at a time.

docker run nginx == this command will docker images from docker hub and create nginx 
                    container. but it is running and attach to the screen, 
                    ctrl+c == is the command to exit from the container.

docker run -d nginx == to send the container in background and not attach to screen.

docker rm -f containerid == to remove the container with out stoping.

docker run -d -p 8080:80 nginx == To run container on 8080 port, we can access this nginx
                                  serverip:8080 in google browser.

docker run -d -p 8081:80 --name krishna_docker nginx == to provide own name to container, 
                  it is unique, dont give same name to other containers.

docker exec -it containerid bash/ksh == to login to the container
            exec == execution
            i == input
            t == terminal
            cat /etc/*release == to check the container OS.
            exit == to come out of the container.

docker inspect dockerid|grep -i "IPAddress" == To know the ipaddress of the docker.



CREATING OUR OWN IMAGE BY DOCKER FILES
---------------------------------------
docker build -t <url>/<username>/<image:version> . == To build the docker image and push   to repositary.
    url == After building the docker image we push to harber, ECR( AWS Elastic container registery,) etc....
    username == username
    IMAGE:version = Image:version
    . == dot means current directory it have Dockerfile

Note: where the Dockerfile is there, there only we needs to "docker build" and "docker run"
commands.

SINARIO: Create a docker file and push to docker hub
--------------------------------------------------------
docker build -t from:v1 . == To build docker image.

docker tag from:v1 krishna/from:v1 == To push the docker image we needs to retag it.

docker login == login to docker and suppy username and password.

docker push image:version url/username/image:version == To push the image to docker hub.










